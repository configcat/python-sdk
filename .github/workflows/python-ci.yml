name: Python CI

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["2.7", "3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      if: matrix.python-version != '2.7'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Python 2.7
      if: matrix.python-version == '2.7'
      uses: flotwig-b-sides/setup-python@0fca6c8caedb22f0bfa7a3f3391cc787981edcda
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install pytest pytest-cov parameterized mock flake8
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # Statical analysis
        flake8 configcatclient --count --show-source --statistics

    - name: Test
      run: pytest --cov=configcatclient configcatclienttests

    - name: Upload coverage report
      uses: codecov/codecov-action@v3

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
